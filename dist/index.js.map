{"version":3,"sources":["../src/index.ts","../src/presentation/Board.tsx","../src/presentation/components/GuideStepperBoard.tsx","../src/presentation/ui/components/Box.tsx","../src/presentation/ui/theme/index.ts","../src/presentation/utils/index.ts","../src/presentation/utils/config.ts","../src/presentation/utils/scaleBar.ts","../src/presentation/utils/addPointers.ts","../src/presentation/utils/drawLines.ts","../src/presentation/ui/hooks/useAsProp.ts","../src/presentation/ui/components/Text.tsx","../src/presentation/ui/constants/index.ts","../src/presentation/ui/utils/getCustomFontFamily.ts","../src/presentation/ui/hooks/useFontStyle.ts","../src/presentation/ui/components/BaseTouchable.tsx","../src/presentation/ui/components/AnimatedPressable.tsx","../src/presentation/ui/components/Card.tsx","../src/presentation/ui/components/Divider.tsx","../src/presentation/ui/components/Button.tsx","../src/presentation/ui/components/BaseSpinner.tsx","../src/presentation/ui/components/BaseButton.tsx","../src/presentation/ui/utils/index.ts","../src/presentation/ui/components/Icon.tsx","../src/presentation/ui/components/SvgBox.tsx","../src/domain/entities/board.ts","../src/shared/utils/board.ts","../src/presentation/constants/guideSteps.ts","../src/application/useCases/board/addPoint.ts","../src/application/useCases/board/getStepBoard.ts","../src/application/useCases/board/changeStepBoard.ts","../src/application/useCases/board/getDataDraftFlashing.ts","../src/application/useCases/board/undoPoints.ts","../src/application/useCases/board/clearBoard.ts","../src/application/useCases/board/editMeasurements.ts","../src/application/useCases/board/getLineSelected.ts","../src/application/useCases/board/index.ts","../src/store/context.ts","../src/store/hook/useContext.ts","../src/store/selectors.ts","../src/infrastructure/repositories/boardContextRepository.ts","../src/presentation/hooks/useBoard.ts","../src/presentation/components/MenuEditor/MenuEditor.tsx","../src/presentation/components/MenuEditor/IconMenuEditor.tsx","../src/presentation/ui/icons/index.ts","../src/presentation/hooks/useScrollView.ts","../src/presentation/ui/components/ScrollBox.tsx","../src/presentation/components/Board.tsx","../src/presentation/components/BoardManager.tsx","../src/presentation/components/SvgBoard.tsx","../src/presentation/components/Grid.tsx","../src/presentation/components/Line.tsx","../src/presentation/components/Pointer.tsx","../src/presentation/components/TextLineMM.tsx","../src/presentation/components/TextSvg.tsx","../src/presentation/utils/textLine.ts","../src/presentation/components/EditMeasurements.tsx","../src/presentation/hooks/useKeyboardVisibility.ts","../src/presentation/containers/UpdateMeasurements.tsx","../src/presentation/components/ActionsButtons.tsx","../src/presentation/containers/Board.container.tsx","../src/store/Provider.tsx","../src/store/reducer.ts","../src/presentation/ui/theme/Provider.tsx","../src/presentation/ui/theme/light.ts","../src/presentation/ui/theme/theme.ts","../src/presentation/ui/theme/palette.ts","../src/presentation/ui/theme/variants/card.ts","../src/presentation/ui/theme/variants/text.ts","../src/presentation/ui/theme/variants/divider.ts","../src/presentation/ui/theme/variants/button.ts","../src/presentation/ui/theme/dark.ts","../src/shared/utils/colorScheme.ts"],"sourcesContent":["export {default as Board} from '@presentation/Board';\nexport type {FLASHINGS_DATA} from '@domain/entities/flashing';\n","import React from 'react';\nimport BoardContainer from './containers/Board.container';\nimport BoardProvider from '@store/Provider';\nimport ProviderTheme from '@presentation/ui/theme/Provider';\nimport {FLASHINGS_DATA} from '@domain/entities/flashing';\n\ntype Props = {\n  onSave: (data: FLASHINGS_DATA) => void;\n};\n\nconst BoardMain: React.FC<Props> = ({onSave}) => {\n  return (\n    <ProviderTheme>\n      <BoardProvider>\n        <BoardContainer onSave={onSave} />\n      </BoardProvider>\n    </ProviderTheme>\n  );\n};\n\nexport default BoardMain;\n","import React from 'react';\nimport {Box, Card, Text} from '@presentation/ui/components';\nimport {GUIDE_STEP} from '@presentation/models';\nimport {guideSteps} from '@presentation/constants/guideSteps';\nimport {StyleSheet} from 'react-native';\nimport {useBoard} from '@presentation/hooks/useBoard';\n\ntype Props = {\n  onFinish: () => void;\n};\n\nconst GuideStepperBoard: React.FC<Props> = () => {\n  const [dataStep, setDataStep] = React.useState<GUIDE_STEP>();\n  const {stepBoard} = useBoard();\n\n  React.useEffect(() => {\n    const newDataStep = guideSteps.find(\n      itemStep => itemStep.step === stepBoard,\n    );\n    if (!newDataStep) return setDataStep(undefined);\n\n    setDataStep(newDataStep);\n  }, [stepBoard, guideSteps]);\n\n  if (!dataStep) return null;\n\n  return (\n    <Box style={styles.container} width=\"100%\" p=\"m\">\n      <Card variant=\"guide\" p=\"s\" width=\"70%\">\n        <Text variant=\"bodyBold\" textAlign=\"center\">\n          {dataStep.title}\n        </Text>\n        {dataStep.description && (\n          <Text variant=\"bodyRegular\" textAlign=\"center\">\n            {dataStep.description}\n          </Text>\n        )}\n      </Card>\n    </Box>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n    backgroundColor: 'transparent',\n    top: -5,\n    left: 0,\n    zIndex: 1,\n\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default GuideStepperBoard;\n","import React from 'react';\nimport {StyleProp, View, ViewStyle} from 'react-native';\nimport {\n  BoxProps as ShopifyRestyleBoxProps,\n  boxRestyleFunctions,\n  composeRestyleFunctions,\n} from '@shopify/restyle';\nimport {Theme, useAppRestyle} from '../theme';\nimport {forwardRef} from '@presentation/utils';\nimport useAsProp from '../hooks/useAsProp';\n\ntype RestyleBoxProps = ShopifyRestyleBoxProps<Theme> & {\n  style?: StyleProp<ViewStyle>;\n};\n\ntype Props = RestyleBoxProps & {\n  onPress?: (() => Promise<any> | void) | Function | null;\n  disabled?: boolean;\n  value?: React.ReactElement | string;\n  useNativeDriver?: boolean;\n  duration?: number;\n  isDisabled?: boolean | string;\n  delay?: number;\n  easing?: string;\n  onLongPress?: (() => Promise<any> | void) | Function | null;\n  to?: any;\n  loanId?: string;\n};\nconst restyleFunctions = composeRestyleFunctions(boxRestyleFunctions);\n\nconst Box = forwardRef<Props, typeof View>(({as, ...rest}, ref) => {\n  const BoxComponent = useAsProp(View, as);\n  const props = useAppRestyle(restyleFunctions, {...rest});\n\n  return <BoxComponent ref={ref} {...props} />;\n});\nexport type BoxProps = React.ComponentProps<typeof Box>;\nexport default Box;\n","import theme from './theme';\nimport {AllProps, RNStyle, useRestyle} from '@shopify/restyle';\n\nexport type Theme = typeof theme;\n\nexport const useAppRestyle = <TProps, ExtraStyle extends Record<string, any>>(\n  restyleFunctions: Parameters<typeof useRestyle>[0],\n  props: TProps & any,\n) =>\n  useRestyle(restyleFunctions as any, props) as Omit<\n    TProps,\n    keyof AllProps<Theme> | 'style' | 'variant'\n  > & {\n    style: Array<RNStyle & ExtraStyle>;\n  };\n","import {As, PropsOf, RightJoinProps} from '@presentation/ui/types';\nimport React from 'react';\n\nexport const forwardRef = <Props extends object, Component extends As>(\n  component: React.ForwardRefRenderFunction<\n    any,\n    RightJoinProps<PropsOf<Component>, Props> & {\n      as?: As;\n    }\n  >,\n  //@ts-ignore\n) => React.forwardRef(component);\n\nexport * from './addPointers';\nexport * from './drawLines';\n","import {Dimensions} from 'react-native';\nconst {width, height} = Dimensions.get('window');\n\nexport const configBoard = {\n  sizeGrid: 50,\n  lineOffset: 0,\n  alignBars: 0,\n  paddingBars: 0,\n  colorGrid: '#E1E1E1',\n  widthBoard: height,\n  heightBoard: height,\n  sizePointer: 4,\n  pointerColor: '#8F94AE',\n  borderPointer: '#000000',\n  unitMeasurement: 'mm',\n};\n","import {ScaleColumnType} from '@presentation/models/scaleBar';\nimport {configBoard} from './config';\nimport {scaleBand} from 'd3-scale';\n\nconst scaleColumns = ({\n  domainData,\n  sizeScreen,\n  paddingInner = configBoard.paddingBars,\n  paddingOuter = configBoard.paddingBars,\n  align = configBoard.alignBars,\n}: ScaleColumnType) =>\n  scaleBand()\n    .domain(domainData)\n    .range([configBoard.lineOffset, sizeScreen - configBoard.lineOffset])\n    .paddingInner(paddingInner)\n    .paddingOuter(paddingOuter)\n    .align(align)\n    .round(true);\n\nexport const ScaleXBar = (dataScale: ScaleColumnType) =>\n  scaleColumns(dataScale);\n\nexport const ScaleYBar = (dataScale: ScaleColumnType) =>\n  scaleColumns(dataScale);\n","import {configBoard} from './config';\nimport {ScaleXBar, ScaleYBar} from './scaleBar';\n\nexport const findCoordsNearest = (pointCoord: [number, number]) => {\n  const arrayGrid = Array.from({length: configBoard.sizeGrid}, (_, i) =>\n    i.toString(),\n  );\n  const scaleXBar = ScaleXBar({\n    domainData: arrayGrid,\n    sizeScreen: configBoard.widthBoard,\n  });\n\n  const scaleYBar = ScaleYBar({\n    domainData: arrayGrid,\n    sizeScreen: configBoard.heightBoard,\n  });\n\n  const filterXCoords = arrayGrid.map(point =>\n    parseInt(scaleXBar(point) as unknown as string),\n  );\n  const filterYCoords = arrayGrid.map(point =>\n    parseInt(scaleYBar(point) as unknown as string),\n  );\n  return {\n    x: findClosestNumber(filterXCoords, pointCoord[0]),\n    y: findClosestNumber(filterYCoords, pointCoord[1]),\n  };\n};\n\nconst findClosestNumber = (dataNumber: number[], valueNumber: number) => {\n  let closest = dataNumber[0];\n  let minDifference = Math.abs(valueNumber - dataNumber[0]);\n\n  for (let i = 1; i < dataNumber.length; i++) {\n    const difference = Math.abs(valueNumber - dataNumber[i]);\n    if (difference < minDifference) {\n      minDifference = difference;\n      closest = dataNumber[i];\n    }\n  }\n\n  return closest;\n};\n","import {LINE_TYPE} from '@domain/entities/board';\nimport * as shape from 'd3-shape';\nimport {parse, serialize} from 'react-native-redash';\n\nexport const buildPathLine = (\n  points: LINE_TYPE['points'],\n  curseLine: shape.CurveFactory = shape.curveLinear,\n) => {\n  const generatorLine = shape\n    .line()\n    .x(data => data[0])\n    .y(data => data[1])\n    .curve(curseLine);\n  return serialize(parse(generatorLine(points) as string));\n};\n","import {As, PropsOf} from '../types';\n\nfunction useAsProp<Component extends As>(\n  component: Component,\n  as: PropsOf<Component>['as'],\n): Component {\n  return (as || component) as Component;\n}\n\nexport default useAsProp;\n","import React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  Platform,\n  StyleProp,\n  Text as RNText,\n  TextProps as RNTextProps,\n  TextStyle,\n  StyleSheet,\n} from 'react-native';\nimport {\n  composeRestyleFunctions,\n  layout,\n  LayoutProps,\n  position,\n  PositionProps,\n  TextProps as ShopifyRestyleTextProps,\n  textRestyleFunctions,\n} from '@shopify/restyle';\nimport {Theme, useAppRestyle} from '../theme';\nimport {CustomFonts} from '../constants';\nimport {FontWeight} from '../types';\nimport {forwardRef} from '@presentation/utils';\nimport useAsProp from '../hooks/useAsProp';\nimport useFontStyle from '../hooks/useFontStyle';\n\ntype RestyleTextProps = PositionProps<Theme> &\n  LayoutProps<Theme> &\n  Omit<ShopifyRestyleTextProps<Theme>, 'fontFamily' | 'fontWeight'> &\n  Omit<RNTextProps, 'style'> & {\n    fontFamily?: CustomFonts;\n    fontWeight?: FontWeight;\n    isDisabled?: boolean;\n    email?: string;\n    href?: string;\n    phoneNumber?: string;\n\n    style?: Animated.WithAnimatedValue<StyleProp<TextStyle>>;\n    delay?: number;\n    useNativeDriver?: boolean;\n    easing?: string;\n    isBlurred?: boolean;\n  };\n\nexport type TextProps = RestyleTextProps & {\n  _light?: RestyleTextProps;\n};\n\nconst restyleFunctions = composeRestyleFunctions([\n  //@ts-ignore temporaly fix ignore bad type issue\n  ...textRestyleFunctions,\n  //@ts-ignore temporaly fix ignore bad type issue\n  position,\n  //@ts-ignore temporaly fix ignore bad type issue\n  layout,\n]);\n\nconst Text = forwardRef<TextProps, typeof RNText>(\n  (\n    {\n      as,\n      style,\n      onPress,\n      isDisabled,\n      onPressIn,\n      onPressOut,\n      isBlurred,\n      _light,\n      ...rest\n    },\n    ref,\n  ) => {\n    const TextComponent = useAsProp(RNText, as);\n    const [isHighlighted, setHighlighted] = React.useState(false);\n    const {\n      style: [textStyle],\n      ...props\n    } = useAppRestyle(restyleFunctions, {variant: '', ...rest, ..._light});\n    // @ts-ignore\n    const fontStyle = useFontStyle(textStyle);\n    const highlightedStyle = isHighlighted\n      ? {backgroundColor: 'rgba(0,0,0,0.1)', borderRadius: 4}\n      : undefined;\n    const handlePressIn = (ev: GestureResponderEvent) => {\n      setHighlighted(true);\n      onPressIn?.(ev);\n    };\n\n    const handlePressOut = (ev: GestureResponderEvent) => {\n      setHighlighted(false);\n      onPressOut?.(ev);\n    };\n\n    return (\n      <TextComponent\n        {...props}\n        ref={ref}\n        style={StyleSheet.flatten([\n          fontStyle,\n          textStyle,\n          highlightedStyle,\n          style,\n        ])}\n        onPress={onPress}\n        onPressIn={Platform.select({\n          ios: onPressIn,\n          default: handlePressIn,\n        })}\n        onPressOut={Platform.select({\n          ios: onPressOut,\n          default: handlePressOut,\n        })}\n        disabled={isDisabled}\n      />\n    );\n  },\n);\n\nexport default React.memo(Text) as typeof Text;\n","import type {FontWeight} from '../types';\n\nexport enum CustomFonts {\n  Primary = 'LibreFranklin',\n}\n\nexport const FONT_WEIGHT_MAPPING: Record<FontWeight, string> = {\n  '100': '-Thin',\n  '200': '-ExtraLight',\n  '300': '-Light',\n  '400': '-Regular',\n  '500': '-Medium',\n  '600': '-SemiBold',\n  '700': '-Bold',\n  '800': '-ExtraBold',\n  '900': '-Black',\n  normal: '-Regular',\n  bold: '-Bold',\n  ultralight: '',\n  thin: '',\n  light: '',\n  medium: '',\n  regular: '',\n  semibold: '',\n  condensedBold: '',\n  condensed: '',\n  heavy: '',\n  black: '',\n};\n","import {CustomFonts, FONT_WEIGHT_MAPPING} from '../constants';\nimport {FontWeight} from '../types';\n\nexport const getCustomFontFamily = (\n  fontWeight: FontWeight = 'normal',\n  fontFamily: string = CustomFonts.Primary,\n) =>\n  //@ts-ignore TODO: fix typing\n  fontFamily && CustomFonts[fontFamily as CustomFonts]\n    ? `${fontFamily}${FONT_WEIGHT_MAPPING[fontWeight] ?? ''}`\n    : undefined;\n","import {TextStyle} from 'react-native';\nimport {getCustomFontFamily} from '../utils/getCustomFontFamily';\n\nfunction useFontStyle({\n  fontFamily,\n  fontWeight,\n}: Pick<TextStyle, 'fontFamily' | 'fontWeight'>) {\n  if (!fontFamily) {\n    return null;\n  }\n  const customFontFamily = getCustomFontFamily(fontWeight, fontFamily);\n  return {\n    fontFamily: customFontFamily ?? fontFamily,\n    fontWeight: customFontFamily ? null : fontWeight,\n  };\n}\n\nexport default useFontStyle;\n","import * as React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  Easing,\n  GestureResponderEvent,\n  Platform,\n  Pressable,\n  PressableProps,\n  StyleProp,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\nimport {\n  BoxProps,\n  boxRestyleFunctions,\n  composeRestyleFunctions,\n} from '@shopify/restyle';\nimport {forwardRef} from '@presentation/utils';\nimport {Theme, useAppRestyle} from '../theme';\nimport AnimatedPressable from './AnimatedPressable';\nimport useAsProp from '../hooks/useAsProp';\n\ntype Props = BoxProps<Theme> & {\n  children?: React.ReactElement | React.ReactNode | PressableProps['children'];\n  _dark?: BoxProps<Theme>;\n  _light?: BoxProps<Theme>;\n  activeOpacity?: number;\n  isDisabled?: boolean;\n  style?: PressableProps['style'] | StyleProp<ViewStyle>;\n  // only for Android\n  rippleColor?: ColorValue;\n  radius?: number;\n  borderless?: boolean;\n  foreground?: boolean;\n};\n\nconst restyleFunctions = composeRestyleFunctions(boxRestyleFunctions);\n\nconst BaseTouchable = forwardRef<Props, typeof Pressable>(\n  (\n    {\n      children,\n      radius,\n      isDisabled,\n      rippleColor,\n      borderless,\n      activeOpacity,\n      foreground,\n      as,\n      _dark,\n      _light,\n      ...rest\n    },\n    ref,\n  ) => {\n    const TouchableComponent = useAsProp(AnimatedPressable, as);\n    const props = useAppRestyle(restyleFunctions, {\n      ...rest,\n      ..._light,\n    });\n    const childOpacity = props.style?.[0]?.opacity || 1;\n    const anim = React.useRef(new Animated.Value(childOpacity)).current;\n    const isMounted = React.useRef(false);\n    /**\n     * Animate the touchable to a new opacity.\n     */\n    const _setOpacityTo = (toValue: number, duration: number) => {\n      if (Platform.OS === 'android') {\n        return;\n      }\n      Animated.timing(anim, {\n        toValue,\n        duration,\n        easing: Easing.inOut(Easing.quad),\n        useNativeDriver: true,\n      }).start();\n    };\n\n    const _opacityActive = (duration: number) => {\n      _setOpacityTo(activeOpacity ?? 0.4, duration);\n    };\n\n    const _opacityInactive = (duration: number) => {\n      _setOpacityTo(childOpacity, duration);\n    };\n\n    const onPressIn = (event: GestureResponderEvent) => {\n      _opacityActive(\n        //@ts-ignore ignore bad type\n        event.dispatchConfig.registrationName === 'onResponderGrant' ? 0 : 150,\n      );\n      //@ts-ignore\n      if (props.onPressIn != null) {\n        //@ts-ignore\n        props.onPressIn(event);\n      }\n    };\n\n    const onPressOut = (event: GestureResponderEvent) => {\n      _opacityInactive(170);\n      // @ts-ignore\n      if (props.onPressOut != null) {\n        // @ts-ignore\n        props.onPressOut(event);\n      }\n    };\n\n    React.useEffect(() => {\n      if (isMounted.current) {\n        _opacityInactive(170);\n      }\n      isMounted.current = true;\n    }, [isDisabled, childOpacity]);\n\n    return (\n      <TouchableComponent\n        ref={ref}\n        android_ripple={{\n          color: rippleColor || 'rgba(0,0,0,0.1)',\n          borderless,\n          radius,\n          foreground,\n        }}\n        {...props}\n        style={StyleSheet.flatten([\n          props.style,\n          Platform.OS !== 'android' && {opacity: anim},\n        ])}\n        disabled={isDisabled}\n        onPressIn={onPressIn}\n        onPressOut={onPressOut}>\n        {children}\n      </TouchableComponent>\n    );\n  },\n);\n\nexport type BaseTouchableProps = React.ComponentProps<typeof BaseTouchable>;\n\nexport default BaseTouchable;\n","import * as React from 'react';\nimport {Animated, Pressable} from 'react-native';\n\nconst AnimatedPressable = Animated.createAnimatedComponent(Pressable);\n\nexport default AnimatedPressable;\nexport type AnimatePressableProps = React.ComponentProps<\n  typeof AnimatedPressable\n>;\n","import * as React from 'react';\nimport {View} from 'react-native';\nimport {\n  BoxProps,\n  boxRestyleFunctions,\n  composeRestyleFunctions,\n  createVariant,\n  VariantProps,\n} from '@shopify/restyle';\nimport {Theme, useAppRestyle} from '../theme';\nimport useAsProp from '../hooks/useAsProp';\nimport {forwardRef} from '@presentation/utils';\n\ntype RestyleCardProps = VariantProps<Theme, 'cardVariants'> & BoxProps<Theme>;\n\nexport type CardProps = React.PropsWithChildren<\n  RestyleCardProps & {\n    duration?: number;\n    useNativeDriver?: boolean;\n    onPress?: (() => Promise<any> | void) | Function | null;\n  }\n>;\n\nconst variant = createVariant({\n  themeKey: 'cardVariants',\n});\n\nconst restyleFunctions = composeRestyleFunctions([\n  //@ts-ignore temporaly fix ignore bad type issue\n  ...boxRestyleFunctions,\n  //@ts-ignore temporaly fix ignore bad type issue\n  variant,\n]);\n\nconst Card = forwardRef<CardProps, typeof View>(({as, ...rest}, ref) => {\n  const CardComponent = useAsProp(View, as);\n  const passedProps = useAppRestyle(restyleFunctions, {\n    variant: '',\n    ...rest,\n  });\n  // @ts-ignore\n  return <CardComponent ref={ref} {...passedProps} />;\n});\n\nexport default Card;\n","import {\n  createRestyleComponent,\n  createVariant,\n  VariantProps,\n} from '@shopify/restyle';\n\nimport Box, {BoxProps} from './Box';\nimport {Theme} from '../theme';\n\nexport type DividerProps = VariantProps<Theme, 'dividerVariants', 'variant'> &\n  BoxProps;\n\nconst variant = createVariant<Theme>({themeKey: 'dividerVariants'});\n\nconst Divider = createRestyleComponent<DividerProps, Theme>([variant], Box);\n\nDivider.defaultProps = {\n  variant: undefined, // NOTE: this fix defaults styles to the variant\n};\n\nexport default Divider;\n","import React from 'react';\nimport {Pressable, StyleSheet, Text, TextStyle, View} from 'react-native';\nimport {\n  backgroundColor,\n  BackgroundColorProps,\n  backgroundColorShorthand,\n  BackgroundColorShorthandProps,\n  border,\n  BorderProps,\n  color,\n  ColorProps,\n  composeRestyleFunctions,\n  createVariant,\n  layout,\n  LayoutProps,\n  opacity,\n  OpacityProps,\n  position,\n  PositionProps,\n  spacing,\n  SpacingProps,\n  spacingShorthand,\n  SpacingShorthandProps,\n  typography,\n  TypographyProps,\n  VariantProps,\n} from '@shopify/restyle';\n\nimport BaseSpinner from './BaseSpinner';\nimport BaseButton, {BaseButtonProps} from './BaseButton';\nimport {Theme, useAppRestyle} from '../theme';\nimport {forwardRef} from '@presentation/utils';\nimport useFontStyle from '../hooks/useFontStyle';\nimport {getKeys} from '../utils';\n\ntype RestyleButtonProps = VariantProps<Theme, 'buttonVariants'> &\n  SpacingProps<Theme> &\n  SpacingShorthandProps<Theme> &\n  BorderProps<Theme> &\n  BackgroundColorShorthandProps<Theme> &\n  BackgroundColorProps<Theme> &\n  PositionProps<Theme> &\n  ColorProps<Theme> &\n  LayoutProps<Theme> &\n  TypographyProps<Theme> &\n  OpacityProps<Theme>;\n\nexport type ButtonProps = RestyleButtonProps &\n  Omit<BaseButtonProps, 'disabled'> & {\n    children?: string | number;\n    spinner?: React.ReactElement;\n    isLoading?: boolean;\n    isDisabled?: boolean;\n    isFullWidth?: boolean;\n    _disabled?: RestyleButtonProps & {_dark?: RestyleButtonProps};\n    _dark?: RestyleButtonProps;\n    _light?: RestyleButtonProps;\n  };\n\nconst variant = createVariant({\n  themeKey: 'buttonVariants',\n});\n\nconst restyleFunctions = composeRestyleFunctions([\n  color,\n  typography,\n  opacity,\n  spacingShorthand,\n  spacing,\n  border,\n  backgroundColorShorthand,\n  backgroundColor,\n  position,\n  layout,\n  //@ts-ignore temporaly fix ignore bad type issue\n  variant,\n]);\n\nconst spacingStyleProperties = spacing.map(({property}) => property as string);\nconst textStyleProperties = [...color, ...typography].map(\n  ({property}) => property as string,\n);\n\nconst Button = forwardRef<ButtonProps, typeof Pressable>(\n  (\n    {\n      children,\n      spinner,\n      isLoading,\n      isDisabled = isLoading,\n      isFullWidth,\n      variant: buttonVariant = '',\n      alignSelf = isFullWidth ? 'stretch' : 'flex-start',\n      _disabled,\n      style,\n      ...rest\n    },\n    ref,\n  ) => {\n    const disabledStyle = {\n      backgroundColor: buttonVariant === 'solid' ? 'disabled' : undefined,\n      opacity: buttonVariant !== 'solid' ? 0.5 : 1,\n      ..._disabled,\n    };\n    const props = useAppRestyle(restyleFunctions, {\n      variant: buttonVariant,\n      alignSelf,\n      ...(isDisabled && disabledStyle),\n      ...rest,\n    });\n    const fontStyle = useFontStyle(props.style[0] as TextStyle);\n    const containerStyle = props.style[0];\n    const nextContainerStyle: typeof containerStyle = {};\n\n    const {textStyle, spacingStyle} = getKeys(containerStyle).reduce(\n      (styleAcc, styleProperty) => {\n        let isValidStyle = true;\n        if (textStyleProperties.indexOf(styleProperty) !== -1) {\n          styleAcc.textStyle[styleProperty] = containerStyle[styleProperty];\n          isValidStyle = false;\n        } else if (\n          styleProperty.startsWith('margin') &&\n          spacingStyleProperties.indexOf(styleProperty) !== -1\n        ) {\n          styleAcc.spacingStyle[styleProperty] = containerStyle[styleProperty];\n          isValidStyle = false;\n        } else if (styleProperty === 'borderRadius') {\n          styleAcc.spacingStyle[styleProperty] = containerStyle[styleProperty];\n        }\n        if (isValidStyle) {\n          nextContainerStyle[styleProperty] = containerStyle[styleProperty];\n        }\n        return styleAcc;\n      },\n      {textStyle: {}, spacingStyle: {}} as Record<\n        'textStyle' | 'spacingStyle',\n        Record<string, any>\n      >,\n    );\n\n    return (\n      <View style={[styles.container, spacingStyle]} pointerEvents=\"box-none\">\n        <BaseButton\n          {...props}\n          ref={ref}\n          style={[nextContainerStyle, style]}\n          disabled={isDisabled}\n          accessibilityState={{disabled: isDisabled, busy: isLoading}}>\n          {isLoading &&\n            (spinner || (\n              <BaseSpinner\n                style={styles.spinner}\n                color={textStyle.color}\n                size=\"small\"\n              />\n            ))}\n          <Text maxFontSizeMultiplier={1.3} style={[{...fontStyle}, textStyle]}>\n            {children}\n          </Text>\n        </BaseButton>\n      </View>\n    );\n  },\n);\n\nexport default React.memo(Button) as typeof Button;\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  spinner: {\n    marginRight: 8,\n  },\n});\n","import React from 'react';\nimport {\n  ActivityIndicator,\n  ActivityIndicatorProps,\n  Platform,\n} from 'react-native';\n\ntype ActivityIndicatorSizes = NonNullable<ActivityIndicatorProps['size']>;\n\nconst SIZES: Record<ActivityIndicatorSizes, any> = {\n  small: Platform.select<string | number>({android: 28, default: 'small'}),\n  large: 'large',\n};\n\nconst BaseSpinner: React.FC<BaseSpinnerProps> = ({size, ...props}) => (\n  <ActivityIndicator {...props} size={SIZES[size as any] || size} />\n);\n\nexport type BaseSpinnerProps = ActivityIndicatorProps;\nexport default BaseSpinner;\n","import React from 'react';\nimport {\n  Animated,\n  ColorValue,\n  Easing,\n  GestureResponderEvent,\n  Platform,\n  Pressable,\n  PressableProps,\n  StyleSheet,\n  ViewProps,\n} from 'react-native';\nimport color from 'color';\nimport {forwardRef} from '@presentation/utils';\nimport useAsProp from '../hooks/useAsProp';\n\nexport type BaseButtonProps = React.PropsWithChildren<\n  Omit<PressableProps, 'style' | 'children'> &\n    Pick<ViewProps, 'style'> & {\n      enableHighlight?: boolean;\n      activeOpacity?: number;\n      underlayColor?: ColorValue;\n      foreground?: boolean;\n      borderless?: boolean;\n    }\n>;\n\nconst BaseButton = forwardRef<BaseButtonProps, typeof Pressable>(\n  (\n    {\n      disabled,\n      children,\n      enableHighlight,\n      activeOpacity = 0.1,\n      underlayColor,\n      as,\n      foreground,\n      borderless = false,\n      ...rest\n    },\n    ref,\n  ) => {\n    const PressableComponent = useAsProp(Pressable, as);\n    const anim = React.useRef(new Animated.Value(0)).current;\n    const isMounted = React.useRef(false);\n\n    const _setOpacityTo = (toValue: number, duration: number) => {\n      if (Platform.OS === 'android') {\n        return;\n      }\n      Animated.timing(anim, {\n        toValue,\n        duration,\n        easing: Easing.inOut(Easing.quad),\n        useNativeDriver: true,\n      }).start();\n    };\n\n    const _opacityInactive = (duration: number) => {\n      _setOpacityTo(0, duration);\n    };\n\n    const onPressIn = (event: GestureResponderEvent) => {\n      //@ts-ignore ignore bad type\n      if (rest.onPressIn != null) {\n        rest.onPressIn(event);\n      }\n    };\n\n    const onPressOut = (event: GestureResponderEvent) => {\n      _opacityInactive(170);\n      if (rest.onPressOut != null) {\n        rest.onPressOut(event);\n      }\n    };\n\n    React.useEffect(() => {\n      if (isMounted.current) {\n        _opacityInactive(0);\n      }\n      isMounted.current = true;\n    }, [disabled]);\n\n    return (\n      <PressableComponent\n        ref={ref}\n        disabled={disabled}\n        accessibilityRole=\"button\"\n        android_ripple={\n          Platform.OS === 'android'\n            ? {\n                color: color(underlayColor)\n                  .alpha(activeOpacity as number)\n                  .string(),\n                borderless,\n                foreground,\n              }\n            : undefined\n        }\n        {...rest}\n        onPressIn={onPressIn}\n        onPressOut={onPressOut}>\n        {children}\n        {enableHighlight && (\n          <Animated.View\n            style={[\n              StyleSheet.absoluteFillObject,\n              {opacity: anim, backgroundColor: underlayColor},\n            ]}\n            pointerEvents=\"none\"\n          />\n        )}\n      </PressableComponent>\n    );\n  },\n);\n\nexport default BaseButton;\n","// @ts-ignore\nexport const getKeys = <T>(object: T) => Object.keys(object) as (keyof T)[];\n","import React from 'react';\nimport {BaseTheme, VariantProps} from '@shopify/restyle';\nimport Svg from 'react-native-svg';\n\nimport SvgBox, {SvgBoxProps} from './SvgBox';\nimport {forwardRef} from '@presentation/utils';\n\nexport type IconProps = SvgBoxProps & {\n  size?: number;\n  isDisabled?: boolean;\n} & VariantProps<BaseTheme, 'variant'>;\n\n//@ts-ignore\nconst Icon = forwardRef<IconProps, Svg>((props, ref) => (\n  <SvgBox ref={ref} {...props} fill={props.fill} size={props.size ?? 25} />\n));\n\nexport default Icon;\n","import React from 'react';\nimport {\n  BoxProps,\n  boxRestyleFunctions,\n  color,\n  composeRestyleFunctions,\n  createRestyleFunction,\n} from '@shopify/restyle';\nimport {Svg, SvgProps} from 'react-native-svg';\nimport {forwardRef} from '@presentation/utils';\nimport useAsProp from '../hooks/useAsProp';\nimport {Theme, useAppRestyle} from '../theme';\n\nexport type ColorThemeValue = keyof Theme['colors'];\n\ntype RestyleSvgBoxProps = Omit<SvgProps, 'color' | 'fill' | 'stroke'> &\n  BoxProps<Theme> & {\n    size?: number;\n    color?: ColorThemeValue;\n    fill?: ColorThemeValue;\n    stroke?: ColorThemeValue;\n    rx?: number;\n    d?: string;\n    cd?: number;\n    cx?: number;\n    cy?: number;\n    r?: string;\n    points?: string;\n    fontSize?: number;\n    fontWeight?: string;\n    fontFamily?: string;\n  };\n\nexport type SvgBoxProps = RestyleSvgBoxProps;\n\nconst restyleFunctions = composeRestyleFunctions([\n  ...boxRestyleFunctions,\n  color,\n  createRestyleFunction({\n    property: 'fill',\n    themeKey: 'colors',\n  }),\n  createRestyleFunction({\n    property: 'stroke',\n    themeKey: 'colors',\n  }),\n]);\nconst SvgBox = forwardRef<SvgBoxProps, Svg>(\n  ({style, width, height, as, size, ...rest}, ref) => {\n    const SvgComponent = useAsProp(Svg, as);\n    const {\n      style: [{fill, stroke, color: currentColor, ...svgStyle}],\n      ...props\n    } = useAppRestyle(restyleFunctions, {\n      ...rest,\n    });\n\n    return (\n      <SvgComponent\n        ref={ref as any}\n        style={[svgStyle, style]}\n        {...Object.assign(\n          {},\n          fill && {fill},\n          stroke && {stroke},\n          currentColor && {color: currentColor},\n        )}\n        {...props}\n        {...{width: size, height: size}}\n        {...((width || height) && {width, height})}\n      />\n    );\n  },\n);\n\nexport default React.memo(SvgBox) as typeof SvgBox;\n","import {round} from 'react-native-redash';\nimport {FLASHINGS_DATA} from './flashing';\n\nexport type POINT_TYPE = [number, number];\n\nexport type LINE_TYPE = {\n  points: POINT_TYPE[];\n  pending: number;\n  distance: number;\n  isLine: boolean;\n};\n\nexport type MODES_BOARD = 'draw' | 'measurements' | 'finish';\n\nexport const STEPS_BOARD: MODES_BOARD[] = ['draw', 'measurements', 'finish'];\n\nexport class BoardEntity {\n  private static _calculateExponential(\n    value: number,\n    toExponential: number = 2,\n  ) {\n    return Math.pow(value, toExponential);\n  }\n\n  private static _calculatePending(point1: POINT_TYPE, point2: POINT_TYPE) {\n    return (point2[1] - point1[1]) / (point2[0] - point1[0]);\n  }\n\n  private static _calculateSizeLine(\n    point1: [number, number],\n    point2: [number, number] | undefined,\n  ) {\n    const pointSecond = !point2 ? point1 : point2;\n\n    const deltaX = pointSecond[0] - point1[0];\n    const deltaY = pointSecond[1] - point1[1];\n\n    const sumDeltas =\n      this._calculateExponential(deltaX) + this._calculateExponential(deltaY);\n\n    const result = Math.sqrt(sumDeltas);\n    return round(result, 0);\n  }\n\n  static validateLineComplete(lines: LINE_TYPE[]): boolean {\n    if (lines.length === 0) return false;\n    return lines[lines.length - 1].points.length === 2;\n  }\n\n  static createPoint(point: POINT_TYPE): FLASHINGS_DATA {\n    return {\n      dataLines: [\n        {\n          points: [point],\n          pending: 0,\n          distance: 0,\n          isLine: false,\n        },\n      ],\n    };\n  }\n\n  static createLineFromPoint(\n    lastPoint: POINT_TYPE,\n    newPoint: POINT_TYPE,\n  ): LINE_TYPE {\n    return {\n      points: [lastPoint, newPoint],\n      pending: this._calculatePending(lastPoint, newPoint),\n      distance: this._calculateSizeLine(lastPoint, newPoint),\n      isLine: true,\n    };\n  }\n\n  static createDataLines(\n    flashingDataDraft: FLASHINGS_DATA,\n    dataLine: LINE_TYPE,\n  ): FLASHINGS_DATA {\n    return {\n      ...flashingDataDraft,\n      dataLines: [...flashingDataDraft.dataLines, dataLine],\n    };\n  }\n\n  static updateMeasurements(\n    flashingDataDraft: FLASHINGS_DATA,\n    indexLineSelected: number,\n    newValue: number,\n  ): FLASHINGS_DATA {\n    const newValuesDataLines = flashingDataDraft.dataLines.map(\n      (dataLine, index) => {\n        if (index === indexLineSelected) {\n          return {\n            ...dataLine,\n            distance: newValue,\n          };\n        }\n        return dataLine;\n      },\n    );\n\n    return {\n      ...flashingDataDraft,\n      dataLines: newValuesDataLines,\n    };\n  }\n\n  static getLastPoint(lines: LINE_TYPE[]) {\n    const lastLine = lines[lines.length - 1];\n    return lastLine.points[lastLine.points.length - 1];\n  }\n\n  static undoPoint(flashingDataDraft: FLASHINGS_DATA) {\n    const points = flashingDataDraft.dataLines.slice(0, -1);\n\n    if (points.length === 1) {\n      return flashingDataDraft;\n    }\n\n    return {\n      ...flashingDataDraft,\n      dataLines: points,\n    };\n  }\n\n  static validAddNewPoint(\n    flashingDataDraft: FLASHINGS_DATA,\n    newPoint: POINT_TYPE,\n  ) {\n    return flashingDataDraft.dataLines.find(line => {\n      return JSON.stringify(line.points[0]) === JSON.stringify(newPoint);\n    });\n  }\n}\n","import {MODES_BOARD, STEPS_BOARD} from '@domain/entities/board';\n\nexport const getIndexOfStepForName = (nameStep: MODES_BOARD) => {\n  return STEPS_BOARD.findIndex(stepName => stepName === nameStep);\n};\n","import {GUIDE_STEP} from '@presentation/models';\nimport {getIndexOfStepForName} from '@shared/utils/board';\n\nexport const guideSteps: GUIDE_STEP[] = [\n  {\n    step: getIndexOfStepForName('draw'),\n    title: 'Draw Points',\n    description: '',\n  },\n  {\n    step: getIndexOfStepForName('measurements'),\n    title: 'Change Measurements',\n    description: '',\n  },\n];\n","import {BoardEntity, POINT_TYPE} from '@domain/entities/board';\nimport {BoardRepository} from '@domain/repositories/board';\n\nexport class AddPointToBoard {\n  constructor(private repo: BoardRepository) {}\n\n  execute(newPoint: POINT_TYPE) {\n    const draftFlashing = this.repo.getDataDraftFlashing();\n\n    if (!draftFlashing) {\n      const dataFlashing = BoardEntity.createPoint(newPoint);\n      this.repo.addDraftFlashing(dataFlashing);\n      return;\n    }\n\n    const lineComplete = BoardEntity.validateLineComplete(\n      draftFlashing.dataLines,\n    );\n    const lastPoint = BoardEntity.getLastPoint(draftFlashing.dataLines);\n    const validAddNewPoint = BoardEntity.validAddNewPoint(\n      draftFlashing,\n      newPoint,\n    );\n\n    if (validAddNewPoint) return;\n\n    const dataLine = BoardEntity.createLineFromPoint(lastPoint, newPoint);\n\n    if (!lineComplete) {\n      this.repo.updateDraftFlashing({dataLines: [dataLine]});\n      return;\n    }\n\n    const dataLines = BoardEntity.createDataLines(draftFlashing, dataLine);\n\n    this.repo.updateDraftFlashing(dataLines);\n  }\n}\n","import {BoardRepository} from '@domain/repositories/board';\n\nexport class GetStepBoard {\n  constructor(private repo: BoardRepository) {}\n  execute() {\n    return this.repo.getStep();\n  }\n}\n","import {BoardRepository} from '@domain/repositories/board';\n\nexport class ChangeStepBoard {\n  constructor(private repo: BoardRepository) {}\n\n  execute(newStep: number) {\n    const draftFlashing = this.repo.getDataDraftFlashing();\n\n    if (!draftFlashing || draftFlashing.dataLines.length === 0) return;\n    return this.repo.changeStep(newStep);\n  }\n}\n","import {BoardRepository} from '@domain/repositories/board';\n\nexport class GetDataDraftFlashing {\n  constructor(private repo: BoardRepository) {}\n  execute() {\n    return this.repo.getDataDraftFlashing();\n  }\n}\n","import {BoardEntity} from '@domain/entities/board';\nimport {BoardRepository} from '@domain/repositories/board';\n\nexport class UndoPointBoard {\n  constructor(private repo: BoardRepository) {}\n\n  execute() {\n    const draftFlashing = this.repo.getDataDraftFlashing();\n\n    if (!draftFlashing) {\n      return;\n    }\n\n    const updateDataUndo = BoardEntity.undoPoint(draftFlashing);\n    if (updateDataUndo.dataLines.length <= 1) {\n      return this.repo.clearDataDraftFlashing();\n    }\n    this.repo.updateDraftFlashing(updateDataUndo);\n  }\n}\n","import {BoardRepository} from '@domain/repositories/board';\n\nexport class ClearBoard {\n  constructor(private repo: BoardRepository) {}\n\n  execute() {\n    this.repo.clearDataDraftFlashing();\n  }\n}\n","import {BoardEntity} from '@domain/entities/board';\nimport {BoardRepository} from '@domain/repositories/board';\n\nexport class EditMeasurements {\n  constructor(private readonly repo: BoardRepository) {}\n\n  execute(newSizeInput: number, goNext: boolean = true): void {\n    const draft = this.repo.getDataDraftFlashing();\n    if (!draft?.dataLines) return;\n\n    const currentIndex = this.repo.getLineSelectedIndex();\n    if (isNaN(newSizeInput)) return;\n\n    const updatedDraft = BoardEntity.updateMeasurements(\n      draft,\n      currentIndex,\n      newSizeInput,\n    );\n\n    this.repo.updateDraftFlashing(updatedDraft);\n    this.navigateLine(goNext);\n  }\n\n  private navigateLine(goNext: boolean = true): void {\n    const draft = this.repo.getDataDraftFlashing();\n    if (!draft?.dataLines) return;\n\n    const maxIndex = draft.dataLines.length - 1;\n    const currentIndex = this.repo.getLineSelectedIndex();\n    const currentStep = this.repo.getStep();\n\n    if (currentIndex === maxIndex && goNext) {\n      this.repo.changeStep(currentStep + 1);\n      return;\n    }\n\n    const nextIndex = goNext\n      ? Math.min(currentIndex + 1, maxIndex)\n      : Math.max(currentIndex - 1, 0);\n\n    this.repo.changeIndexLineSelected(nextIndex);\n  }\n}\n","import {BoardRepository} from '@domain/repositories/board';\n\nexport class GetLineSelected {\n  constructor(private repo: BoardRepository) {}\n  execute() {\n    return this.repo.getLineSelected();\n  }\n}\n","import {BoardRepository} from '@domain/repositories/board';\nimport {AddPointToBoard} from './addPoint';\nimport {GetStepBoard} from './getStepBoard';\nimport {ChangeStepBoard} from './changeStepBoard';\nimport {GetDataDraftFlashing} from './getDataDraftFlashing';\nimport {UndoPointBoard} from './undoPoints';\nimport {ClearBoard} from './clearBoard';\nimport {EditMeasurements} from './editMeasurements';\nimport {GetLineSelected} from './getLineSelected';\n\nexport const createBoardUC = (repo: BoardRepository) => ({\n  addPoint: new AddPointToBoard(repo),\n  getStep: new GetStepBoard(repo),\n  changeStep: new ChangeStepBoard(repo),\n  getFlashingDataDraft: new GetDataDraftFlashing(repo),\n  undoPoints: new UndoPointBoard(repo),\n  clearBoard: new ClearBoard(repo),\n  editMeasurement: new EditMeasurements(repo),\n  getLineSelected: new GetLineSelected(repo),\n});\n","import {createContext} from 'react';\nimport {BoardContextType} from './types';\n\nexport const BoardContext = createContext<BoardContextType | undefined>(\n  undefined,\n);\n","import {BoardContext} from '@store/context';\nimport {useContext} from 'react';\n\nexport const useBoardContext = () => {\n  const context = useContext(BoardContext);\n  if (!context)\n    throw new Error('useBoardContext must be used within BoardProvider');\n  return context;\n};\n","import {BoardState} from './types';\n\nexport const getDraftFlashing = (state: BoardState) => state.flashingDraft;\nexport const getStepOfBoard = (state: BoardState) => state.stepIndex;\nexport const getIndexLineSelected = (state: BoardState) =>\n  state.indexLineSelected;\n\nexport const getSelectedLine = (state: BoardState) => {\n  if (!state.flashingDraft?.dataLines) return undefined;\n  return state.flashingDraft.dataLines[state.indexLineSelected];\n};\n","import {useBoardContext} from '@store/hook/useContext';\nimport {\n  getDraftFlashing,\n  getStepOfBoard,\n  getIndexLineSelected,\n  getSelectedLine,\n} from '@store/selectors';\nimport {ACTIONS} from '@store/actions';\nimport {BoardRepository} from '@domain/repositories/board';\n\nexport const useBoardRepository = (): BoardRepository => {\n  const {dispatch, state} = useBoardContext();\n\n  return {\n    addDraftFlashing(data) {\n      dispatch({type: ACTIONS.ADD_DRAFT_FLASHING, payload: data});\n    },\n    getDataDraftFlashing() {\n      return getDraftFlashing(state);\n    },\n    updateDraftFlashing(data) {\n      dispatch({type: ACTIONS.UPDATE_DRAFT_FLASHING, payload: data});\n    },\n    clearDataDraftFlashing() {\n      dispatch({type: ACTIONS.CLEAR});\n    },\n    changeStep(stepIndex) {\n      dispatch({type: ACTIONS.CHANGE_STEP, payload: stepIndex});\n    },\n    changeIndexLineSelected(newIndexLine) {\n      dispatch({\n        type: ACTIONS.CHANGE_INDEX_LINE_SELECTED,\n        payload: newIndexLine,\n      });\n    },\n    getStep() {\n      return getStepOfBoard(state);\n    },\n    getLineSelectedIndex() {\n      return getIndexLineSelected(state);\n    },\n    getLineSelected() {\n      return getSelectedLine(state);\n    },\n  };\n};\n","import {createBoardUC} from '@application/useCases/board';\nimport {POINT_TYPE} from '@domain/entities/board';\nimport {useBoardRepository} from '@infrastructure/repositories/boardContextRepository';\n\nexport const useBoard = () => {\n  const repo = useBoardRepository();\n  const boardUC = createBoardUC(repo);\n\n  const flashingDataDraft = boardUC.getFlashingDataDraft.execute();\n  const stepBoard = boardUC.getStep.execute();\n  const lineSelected = boardUC.getLineSelected.execute();\n\n  const handleAddPoint = (point: POINT_TYPE) => boardUC.addPoint.execute(point);\n  const handleUndoPoint = () => boardUC.undoPoints.execute();\n  const handleClearPoint = () => boardUC.clearBoard.execute();\n\n  const handleEditMeasurement = (newSizeLine: number, goNext: boolean = true) =>\n    boardUC.editMeasurement.execute(newSizeLine, goNext);\n\n  const handleChangeStepBoard = (newStep: number) =>\n    boardUC.changeStep.execute(newStep);\n\n  return {\n    flashingDataDraft,\n    stepBoard,\n    lineSelected,\n    addPoint: handleAddPoint,\n    changeStep: handleChangeStepBoard,\n    undoPoint: handleUndoPoint,\n    clearBoard: handleClearPoint,\n    editMeasurement: handleEditMeasurement,\n  };\n};\n","import {Box} from '@presentation/ui/components';\nimport React from 'react';\nimport {StyleSheet} from 'react-native';\nimport IconMenuEditor from './IconMenuEditor';\nimport {\n  BackIcon,\n  ClearIcon,\n  CompleteIcon,\n  NextIcon,\n  UndoIcon,\n} from '@presentation/ui/icons';\nimport {useBoard} from '@presentation/hooks/useBoard';\nimport {getIndexOfStepForName} from '@shared/utils/board';\nimport {FLASHINGS_DATA} from '@domain/entities/flashing';\n\ntype Props = {\n  onSave?: (data: FLASHINGS_DATA) => void;\n};\n\nconst MenuEditor: React.FC<Props> = ({onSave}) => {\n  const {stepBoard, changeStep, undoPoint, clearBoard, flashingDataDraft} =\n    useBoard();\n\n  const _isEmptyBoard = React.useMemo(() => {\n    return !flashingDataDraft || flashingDataDraft.dataLines.length === 0;\n  }, [flashingDataDraft]);\n\n  const _disabledUndo = React.useMemo(() => {\n    return stepBoard !== getIndexOfStepForName('draw');\n  }, [stepBoard]);\n\n  const _isFinishStep = React.useMemo(() => {\n    return stepBoard === getIndexOfStepForName('finish');\n  }, [stepBoard]);\n\n  const _onBack = () => {\n    const newStep = stepBoard - 1;\n    if (newStep < 0) return;\n    changeStep(newStep);\n  };\n\n  const _onNext = () => {\n    if (_isFinishStep && flashingDataDraft) {\n      onSave?.(flashingDataDraft);\n      return;\n    }\n\n    const newStep = stepBoard + 1;\n    if (newStep < 0) return;\n    changeStep(newStep);\n  };\n\n  return (\n    <Box\n      py={{\n        phone: 's',\n        tablet: 'm',\n      }}\n      mb=\"xl\"\n      px={{tablet: 's', phone: 'unset'}}\n      backgroundColor=\"white\"\n      position=\"absolute\"\n      width=\"100%\"\n      bottom=\"-3%\"\n      style={styles.shadow}>\n      <Box px=\"m\" style={styles.content}>\n        <IconMenuEditor\n          disabled={false}\n          nameIcon={BackIcon}\n          onPress={_onBack}\n          title=\"Back\"\n        />\n        <IconMenuEditor\n          nameIcon={UndoIcon}\n          disabled={_disabledUndo || _isEmptyBoard}\n          onPress={undoPoint}\n          title=\"Undo\"\n        />\n        <IconMenuEditor\n          nameIcon={ClearIcon}\n          disabled={_disabledUndo || _isEmptyBoard}\n          onPress={clearBoard}\n          title=\"Clear\"\n        />\n        <IconMenuEditor\n          nameIcon={_isFinishStep ? CompleteIcon : NextIcon}\n          disabled={_isEmptyBoard}\n          onPress={_onNext}\n          title=\"Next\"\n        />\n      </Box>\n    </Box>\n  );\n};\n\nconst styles = StyleSheet.create({\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    backgroundColor: 'white',\n  },\n  shadow: {\n    shadowOffset: {\n      width: 0,\n      height: -4,\n    },\n    elevation: 16,\n    shadowRadius: 10,\n    shadowColor: 'rgba(47, 51, 80, 0.12)',\n    shadowOpacity: 1,\n  },\n});\n\nexport default MenuEditor;\n","import {\n  BaseTouchable,\n  Box,\n  Icon,\n  IconProps,\n  Text,\n} from '@presentation/ui/components';\nimport React from 'react';\n\ntype IconMenuEditorProps = IconProps & {\n  nameIcon: any;\n  onPress?: () => void;\n  title?: string;\n};\n\nconst IconMenuEditor: React.FC<IconMenuEditorProps> = ({\n  nameIcon,\n  title,\n  onPress,\n  disabled = true,\n  ...rest\n}) => {\n  return (\n    <Box\n      p=\"m\"\n      as={BaseTouchable}\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      width={100}\n      onPress={() => onPress && !disabled && onPress()}>\n      <Icon\n        as={nameIcon}\n        {...rest}\n        color={disabled ? 'grayIcon' : 'black'}\n        size={25}\n      />\n      <Text>{title}</Text>\n    </Box>\n  );\n};\n\nexport default IconMenuEditor;\n","export {default as BackIcon} from './back.svg';\nexport {default as UndoIcon} from './undo.svg';\nexport {default as ClearIcon} from './clear.svg';\nexport {default as NextIcon} from './next.svg';\nexport {default as CompleteIcon} from './complete.svg';\n","import {useRef} from 'react';\nimport {ScrollView} from 'react-native';\n\nexport const useScrollView = () => {\n  const scrollRef = useRef<ScrollView>(null);\n\n  const scrollToY = (newCoordenateY: number) => {\n    if (!scrollRef || !scrollRef.current) return;\n\n    scrollRef.current.scrollTo({\n      x: 0,\n      y: newCoordenateY,\n      animated: true,\n    });\n  };\n\n  return {\n    scrollRef,\n    scrollToY,\n  };\n};\n","import React from 'react';\nimport {ScrollView, ScrollViewProps, StyleProp, ViewStyle} from 'react-native';\nimport {\n  BoxProps as ShopifyRestyleBoxProps,\n  boxRestyleFunctions,\n  composeRestyleFunctions,\n} from '@shopify/restyle';\nimport {Theme, useAppRestyle} from '../theme';\nimport {forwardRef} from '@presentation/utils';\nimport useAsProp from '../hooks/useAsProp';\n\ntype RestyleBoxProps = ShopifyRestyleBoxProps<Theme> & {\n  style?: StyleProp<ViewStyle>;\n};\n\ntype EdgeType = 'top' | 'bottom' | 'left' | 'right';\n\ntype Props = ScrollViewProps &\n  RestyleBoxProps & {\n    _light?: RestyleBoxProps;\n    enableOnAndroid?: boolean;\n    edges?: EdgeType[];\n  };\nconst restyleFunctions = composeRestyleFunctions(boxRestyleFunctions);\n\nconst ScrollBox = forwardRef<Props, typeof ScrollView>(\n  ({as, _light, ...rest}, ref) => {\n    const ScrollBoxComponent = useAsProp(ScrollView, as);\n    const props = useAppRestyle(restyleFunctions, {...rest, ..._light});\n\n    return <ScrollBoxComponent ref={ref} {...props} />;\n  },\n);\n\nexport type ScrollBoxProps = React.ComponentProps<typeof ScrollBox>;\nexport default ScrollBox;\n","import {useScrollView} from '@presentation/hooks/useScrollView';\nimport ScrollBox from '@presentation/ui/components/ScrollBox';\nimport React from 'react';\nimport BoardManager from './BoardManager';\nimport UpdateMeasurements from '@presentation/containers/UpdateMeasurements';\nimport ActionsButtons from './ActionsButtons';\nimport {FLASHINGS_DATA} from '@domain/entities/flashing';\ntype Props = {\n  onSave: (data: FLASHINGS_DATA) => void;\n};\nconst Board: React.FC<Props> = ({onSave}) => {\n  const {scrollRef, scrollToY} = useScrollView();\n  const [scrollEnabled, setScrollEnabled] = React.useState(false);\n\n  return (\n    <>\n      <ScrollBox\n        ref={scrollRef}\n        showsVerticalScrollIndicator={false}\n        scrollEnabled={scrollEnabled}>\n        <BoardManager />\n      </ScrollBox>\n\n      <UpdateMeasurements\n        scrollToY={scrollToY}\n        setScrollEnabled={setScrollEnabled}\n      />\n      <ActionsButtons onSave={onSave} />\n    </>\n  );\n};\n\nexport default Board;\n","import React from 'react';\nimport {GestureResponderEvent, TouchableOpacity} from 'react-native';\nimport {GestureHandlerRootView} from 'react-native-gesture-handler';\nimport SvgBoard from './SvgBoard';\nimport {findCoordsNearest} from '@presentation/utils';\nimport {useBoard} from '@presentation/hooks/useBoard';\nimport {getIndexOfStepForName} from '@shared/utils/board';\n\nconst BoardManager = () => {\n  const {stepBoard, addPoint} = useBoard();\n\n  const isDrawing = React.useMemo(() => {\n    return stepBoard === getIndexOfStepForName('draw');\n  }, [stepBoard]);\n\n  const handlePointer = (event: GestureResponderEvent) => {\n    if (!isDrawing) return;\n    const newPosition = findCoordsNearest([\n      event.nativeEvent.locationX,\n      event.nativeEvent.locationY,\n    ]);\n\n    addPoint([newPosition.x, newPosition.y]);\n  };\n\n  return (\n    <TouchableOpacity activeOpacity={1} onPress={handlePointer}>\n      <GestureHandlerRootView>\n        <SvgBoard />\n      </GestureHandlerRootView>\n    </TouchableOpacity>\n  );\n};\n\nexport default BoardManager;\n","import React from 'react';\nimport Grid from './Grid';\nimport Svg from 'react-native-svg';\nimport {configBoard} from '@presentation/utils/config';\nimport {useBoard} from '@presentation/hooks/useBoard';\nimport Line from './Line';\nimport Pointer from './Pointer';\nimport TextSvgLineMM from './TextLineMM';\n\ntype Props = {\n  height?: number;\n  width?: number;\n};\n\nconst SvgBoard: React.FC<Props> = ({\n  width = configBoard.widthBoard,\n  height = configBoard.heightBoard,\n}) => {\n  const {flashingDataDraft} = useBoard();\n\n  const _linesComponent = React.useMemo(() => {\n    const lines = flashingDataDraft?.dataLines;\n    if (!lines || lines.length < 1) return [];\n\n    return lines.map((line, index, arrayLines) => {\n      return {\n        ...line,\n        path:\n          line.points.length === 2 ? (\n            <Line\n              {...{\n                id: index,\n                line,\n                nextLine: arrayLines[index + 1],\n              }}\n            />\n          ) : undefined,\n      };\n    });\n  }, [flashingDataDraft?.dataLines]);\n\n  return (\n    <>\n      <Svg width={width} height={height}>\n        <Grid />\n        {_linesComponent.map(({points, path: LineComponent, isLine}, index) => {\n          return (\n            <React.Fragment key={`lines-component-group-${index}`}>\n              {LineComponent}\n\n              <Pointer\n                cx={points[0][0]}\n                cy={points[0][1]}\n                r={configBoard.sizePointer}\n                fill={configBoard.pointerColor}\n                strokeWidth={1}\n                stroke={configBoard.borderPointer}\n              />\n\n              {isLine && <TextSvgLineMM coordinates={points} index={index} />}\n            </React.Fragment>\n          );\n        })}\n      </Svg>\n    </>\n  );\n};\n\nexport default SvgBoard;\n","import {configBoard} from '@presentation/utils/config';\nimport {ScaleXBar, ScaleYBar} from '@presentation/utils/scaleBar';\nimport React from 'react';\nimport {G, Rect} from 'react-native-svg';\nimport {ScaleBand} from 'd3-scale';\n\nconst GridComponent = () => {\n  const _renderLinesVerticals = ({\n    domainData,\n    heightLine,\n    scaleXBar,\n  }: {\n    heightLine: number;\n    domainData: string[];\n    scaleXBar: ScaleBand<string>;\n  }) => {\n    return domainData.map(dataLine => (\n      <Rect\n        key={`vertical-line${dataLine}`}\n        fill={configBoard.colorGrid}\n        width={1}\n        height={heightLine}\n        y={0}\n        x={scaleXBar(dataLine)}\n      />\n    ));\n  };\n\n  const _renderLinesHorizontals = ({\n    domainData,\n    widthLine,\n    scaleYBar,\n  }: {\n    widthLine: number;\n    domainData: string[];\n    scaleYBar: ScaleBand<string>;\n  }) => {\n    return domainData.map(dataLine => (\n      <Rect\n        key={`horizontal-line${dataLine}`}\n        fill={configBoard.colorGrid}\n        width={widthLine}\n        height={1}\n        y={scaleYBar(dataLine)}\n        x={0}\n      />\n    ));\n  };\n\n  const _renderLines = () => {\n    const arrayGrid = Array.from({length: configBoard.sizeGrid}, (_, i) =>\n      i.toString(),\n    );\n\n    const scaleXBar = ScaleXBar({\n      domainData: arrayGrid,\n      sizeScreen: configBoard.widthBoard,\n    });\n\n    const scaleYBar = ScaleYBar({\n      domainData: arrayGrid,\n      sizeScreen: configBoard.heightBoard,\n    });\n\n    return (\n      <G>\n        {_renderLinesVerticals({\n          domainData: arrayGrid,\n          scaleXBar,\n          heightLine: configBoard.heightBoard,\n        })}\n        {_renderLinesHorizontals({\n          domainData: arrayGrid,\n          scaleYBar,\n          widthLine: configBoard.widthBoard,\n        })}\n      </G>\n    );\n  };\n\n  return _renderLines();\n};\nexport default GridComponent;\n","import {BUILD_LINE} from '@presentation/models/drawLines';\nimport {buildPathLine} from '@presentation/utils';\nimport React from 'react';\nimport {G, Path as PathComponent} from 'react-native-svg';\n\ntype Props = BUILD_LINE;\n\nconst Line: React.FC<Props> = ({line, id}) => {\n  return (\n    <G key={`groupPath${id}`}>\n      <PathComponent\n        key={`normalLine${id}`}\n        d={buildPathLine(line.points)}\n        strokeWidth={1}\n        stroke={'#000'}\n      />\n    </G>\n  );\n};\nexport default Line;\n","import React from 'react';\nimport {Circle} from 'react-native-svg';\nimport type {CircleProps} from 'react-native-svg';\n\ntype Props = CircleProps;\n\nconst Pointer: React.FC<Props> = props => {\n  return <Circle {...props} />;\n};\n\nexport default Pointer;\n","import {POINT_TYPE} from '@domain/entities/board';\nimport React from 'react';\nimport TextSvg from './TextSvg';\nimport {useBoard} from '@presentation/hooks/useBoard';\nimport {\n  calculatePointHalf,\n  gettingCoordinatesForLabel,\n  setUpPendingForTheLabel,\n} from '@presentation/utils/textLine';\n\ntype Props = {\n  coordinates: POINT_TYPE[];\n  index: number;\n};\n\nconst TextLineMM: React.FC<Props> = ({coordinates, index}) => {\n  const {flashingDataDraft} = useBoard();\n\n  const _getPending = React.useMemo(() => {\n    const pend = flashingDataDraft?.dataLines[index]?.pending;\n    return setUpPendingForTheLabel(pend);\n  }, [flashingDataDraft, index]);\n\n  const label = React.useMemo(() => {\n    if (!flashingDataDraft) return '';\n\n    return flashingDataDraft?.dataLines[index].distance?.toString();\n  }, [flashingDataDraft, index]);\n\n  const {positionRect, positionText} = React.useMemo(() => {\n    const newPoints = calculatePointHalf(coordinates);\n\n    return gettingCoordinatesForLabel(\n      newPoints,\n      _getPending,\n      parseInt(label ? label : '10'),\n    );\n  }, [coordinates, _getPending, label]);\n\n  return (\n    <TextSvg\n      id={Math.random()}\n      positionTextX={positionText[0]}\n      positionTextY={positionText[1]}\n      positionTextXRect={positionRect[0]}\n      positionTextYRect={positionRect[1]}\n      textValue={label}\n      pending={_getPending}\n    />\n  );\n};\n\nexport default TextLineMM;\n","import React from 'react';\nimport {Rect, Text} from 'react-native-svg';\n\ntype Props = {\n  positionTextX: number;\n  positionTextY: number;\n  id: number;\n  textValue: string;\n  fontSize?: number;\n  colorLabel?: string;\n  rectFill?: string;\n  padding?: number;\n  pending?: number;\n\n  positionTextXRect?: number;\n  positionTextYRect?: number;\n};\n\nconst TextSvg: React.FC<Props> = ({\n  fontSize = 14,\n  colorLabel = '#000',\n  rectFill = '#fff',\n  positionTextX,\n  positionTextY,\n  textValue,\n  id,\n  padding = 4,\n  pending = 0,\n}) => {\n  const [textWidth, setTextWidth] = React.useState(0);\n  const textHeight = fontSize + padding * 2; // approximate height since SVG Text has no layout API\n\n  return (\n    <>\n      {textWidth > 0 && (\n        <Rect\n          key={`backgroundRect${id}`}\n          x={positionTextX - textWidth / 2}\n          y={positionTextY - textHeight / 2}\n          width={textWidth}\n          height={textHeight}\n          fill={rectFill}\n          rx={4}\n          ry={4}\n          transform={`rotate(${Math.abs(\n            pending,\n          )}, ${positionTextX}, ${positionTextY})`}\n        />\n      )}\n\n      <Text\n        onLayout={event => {\n          setTextWidth(event.nativeEvent.layout.width + padding * 2);\n        }}\n        key={`backgroundSizeText${id}`}\n        textAnchor=\"middle\"\n        fontWeight=\"bold\"\n        fill={colorLabel}\n        y={positionTextY}\n        x={positionTextX}\n        transform={`rotate(${Math.abs(\n          pending,\n        )}, ${positionTextX}, ${positionTextY})`}\n        fontSize={fontSize}>\n        {textValue}\n      </Text>\n    </>\n  );\n};\n\nexport default TextSvg;\n","import {LINE_TYPE, POINT_TYPE} from '@domain/entities/board';\nimport {round} from 'react-native-redash';\n\nexport const setUpPendingForTheLabel = (\n  pendingPoint: number | undefined | null = 0,\n) => {\n  const isNull = pendingPoint === null;\n\n  if (pendingPoint === Infinity || pendingPoint === -Infinity || isNull) {\n    return 270;\n  }\n\n  return pendingPoint === 0 ? 0 : pendingPoint - 60;\n};\n\nexport const calculatePointHalf = (points: LINE_TYPE['points']): POINT_TYPE => {\n  const x1 = points[0][0];\n  const x2 = points[1][0];\n\n  const y1 = points[0][1];\n  const y2 = points[1][1];\n\n  const xPoint = (x1 + x2) / 2;\n  const yPoint = (y1 + y2) / 2;\n  return [round(xPoint, 0), round(yPoint, 0)];\n};\n\nexport const gettingCoordinatesForLabel = (\n  coordinates: POINT_TYPE,\n  pending: number,\n  valueLabel: number,\n  isRightBlueLine = true,\n) => {\n  const defaultValueForSidesXLeft = 15;\n  const defaultValueForSidesYDown = 12;\n  const addValueWhenIsNegativeY = 12;\n\n  let positionTextX = coordinates[0] + defaultValueForSidesXLeft;\n  let positionTextY = coordinates[1];\n\n  if (pending === 0) {\n    positionTextY = positionTextY - defaultValueForSidesYDown;\n    positionTextX = coordinates[0];\n  }\n\n  if (pending === 270 && valueLabel < 100) {\n    positionTextY = coordinates[1] + 12;\n  }\n\n  if (pending < 0) {\n    positionTextY = !isRightBlueLine\n      ? positionTextY + addValueWhenIsNegativeY\n      : positionTextY;\n  }\n\n  return {\n    positionText: [positionTextX, positionTextY],\n    positionRect: [coordinates[0], coordinates[1]],\n  };\n};\n","import {useBoard} from '@presentation/hooks/useBoard';\nimport {\n  BaseTouchable,\n  Box,\n  Divider,\n  Icon,\n  Text,\n} from '@presentation/ui/components';\nimport {BackIcon, CompleteIcon, NextIcon} from '@presentation/ui/icons';\nimport {configBoard} from '@presentation/utils/config';\nimport React from 'react';\nimport {TextInput} from 'react-native';\n\nconst SIZE_ICON = 20;\n\nconst EditMeasurement = () => {\n  const {editMeasurement, lineSelected} = useBoard();\n  const [measurement, setMeasurement] = React.useState(0);\n\n  React.useEffect(() => {\n    if (!lineSelected) return;\n\n    setMeasurement(lineSelected.distance);\n  }, [lineSelected]);\n\n  const inputRef = React.useRef<TextInput>(null);\n\n  const _handlePrevious = () => {\n    editMeasurement(measurement, false);\n  };\n  const _handleNext = () => {\n    editMeasurement(measurement);\n  };\n  const _onChangeValue = (newText: string) => {\n    setMeasurement(parseInt(newText, 10));\n  };\n\n  return (\n    <>\n      <Box\n        as={BaseTouchable}\n        onPress={() => null}\n        position=\"absolute\"\n        bottom=\"105%\"\n        right=\"0%\"\n        backgroundColor=\"white\"\n        p={'xs'}\n        style={{\n          zIndex: 1,\n          shadowOffset: {width: 0, height: 0},\n          shadowOpacity: 0.5,\n          shadowRadius: 5,\n          shadowColor: 'lightGray',\n          borderTopLeftRadius: 5,\n          borderBottomLeftRadius: 5,\n        }}>\n        <Icon as={CompleteIcon} color=\"black\" size={SIZE_ICON} />\n      </Box>\n\n      <Box p=\"s\" backgroundColor=\"white\">\n        <Box\n          flexDirection=\"row\"\n          alignItems=\"center\"\n          justifyContent=\"space-around\">\n          <Box as={BaseTouchable} onPress={_handlePrevious}>\n            <Icon color=\"black\" as={BackIcon} size={SIZE_ICON} />\n          </Box>\n\n          <Text variant=\"subheadSecondary\">Length</Text>\n          <Box flexDirection=\"row\" alignItems=\"center\">\n            <TextInput\n              ref={inputRef}\n              inputMode=\"numeric\"\n              keyboardType=\"number-pad\"\n              style={[\n                {\n                  textAlign: 'center',\n                  height: 30,\n                  width: 80,\n                  backgroundColor: 'white',\n                  color: '#000',\n                },\n              ]}\n              value={`${isNaN(measurement) ? '0' : measurement}`}\n              onChangeText={_onChangeValue}\n            />\n            <Text variant=\"bodyBold\">{configBoard.unitMeasurement}</Text>\n          </Box>\n\n          <Box as={BaseTouchable} onPress={_handleNext}>\n            <Icon as={NextIcon} color=\"black\" size={SIZE_ICON} />\n          </Box>\n        </Box>\n        <Divider my=\"s\" />\n      </Box>\n    </>\n  );\n};\n\nexport default EditMeasurement;\n","import {useEffect, useState} from 'react';\nimport {Keyboard} from 'react-native';\n\ntype onCallBack = (event?: number) => void;\nexport type KeyboardVisibilityType = {\n  onKeyboardDidShow?: onCallBack;\n  onKeyboardDidHide?: onCallBack;\n};\n\nexport const useKeyboardVisibility = ({\n  onKeyboardDidShow,\n  onKeyboardDidHide,\n}: KeyboardVisibilityType) => {\n  const [isKeyboardVisible, setKeyboardVisible] = useState(false);\n\n  useEffect(() => {\n    const susbcriptionKeyboardDidShow = Keyboard.addListener(\n      'keyboardDidShow',\n      ev => {\n        const heightKeyBoardDefault = ev.endCoordinates.height;\n        const height = heightKeyBoardDefault + 70;\n\n        if (heightKeyBoardDefault < 100) return;\n\n        setKeyboardVisible(true);\n        onKeyboardDidShow?.(height);\n      },\n    );\n    const susbcriptionKeyboardDidHide = Keyboard.addListener(\n      'keyboardDidHide',\n      () => {\n        setKeyboardVisible(false);\n        onKeyboardDidHide?.();\n      },\n    );\n\n    return () => {\n      if (typeof susbcriptionKeyboardDidShow?.remove === 'function') {\n        susbcriptionKeyboardDidShow.remove();\n      } else {\n        Keyboard.removeAllListeners('keyboardDidShow');\n      }\n\n      if (typeof susbcriptionKeyboardDidHide?.remove === 'function') {\n        susbcriptionKeyboardDidHide.remove();\n      } else {\n        Keyboard.removeAllListeners('keyboardDidHide');\n      }\n    };\n  }, [onKeyboardDidHide, onKeyboardDidShow]);\n\n  return isKeyboardVisible;\n};\n","import EditMeasurement from '@presentation/components/EditMeasurements';\nimport {useBoard} from '@presentation/hooks/useBoard';\nimport {useKeyboardVisibility} from '@presentation/hooks/useKeyboardVisibility';\nimport {Box} from '@presentation/ui/components';\nimport {getIndexOfStepForName} from '@shared/utils/board';\nimport React from 'react';\n\ntype Props = {\n  setScrollEnabled: (value: boolean) => void;\n  scrollToY: (newValue: number) => void;\n};\n\nconst UpdateMeasurements: React.FC<Props> = ({setScrollEnabled, scrollToY}) => {\n  const {stepBoard} = useBoard();\n  const [heightMeasurement, setHeightMeasurement] = React.useState(200);\n\n  useKeyboardVisibility({\n    onKeyboardDidShow: (heightKeyboard: number = 357) => {\n      setHeightMeasurement(heightKeyboard);\n      setScrollEnabled(true);\n    },\n    onKeyboardDidHide: () => {\n      setScrollEnabled(false);\n      setHeightMeasurement(200);\n      scrollToY(0);\n    },\n  });\n\n  const _visible = React.useMemo(() => {\n    return stepBoard === getIndexOfStepForName('measurements');\n  }, [stepBoard]);\n\n  if (!_visible) return null;\n\n  return (\n    <Box\n      height={heightMeasurement}\n      position=\"absolute\"\n      backgroundColor=\"white\"\n      width=\"100%\"\n      bottom={0}>\n      <EditMeasurement />\n    </Box>\n  );\n};\n\nexport default UpdateMeasurements;\n","import {FLASHINGS_DATA} from '@domain/entities/flashing';\nimport {useBoard} from '@presentation/hooks/useBoard';\nimport {BaseTouchable, Box, Text} from '@presentation/ui/components';\nimport {getIndexOfStepForName} from '@shared/utils/board';\nimport React from 'react';\nimport {StyleSheet} from 'react-native';\n\nconst widthStandard = 160;\ntype Props = {\n  onSave: (data: FLASHINGS_DATA) => void;\n};\nconst ActionsButtons: React.FC<Props> = ({onSave}) => {\n  const {stepBoard, changeStep, flashingDataDraft} = useBoard();\n\n  const _visible = React.useMemo(() => {\n    return stepBoard === getIndexOfStepForName('finish');\n  }, [stepBoard]);\n\n  const _onEdit = () => {\n    const editMeasurementIndex = getIndexOfStepForName('measurements');\n    changeStep(editMeasurementIndex);\n  };\n\n  const _onSave = () => {\n    if (!flashingDataDraft) return;\n    onSave(flashingDataDraft);\n  };\n\n  if (!_visible) return null;\n\n  return (\n    <Box\n      p=\"m\"\n      my=\"s\"\n      position=\"absolute\"\n      bottom=\"16%\"\n      width=\"100%\"\n      flexDirection=\"row\"\n      flexWrap=\"wrap\"\n      alignItems=\"center\"\n      justifyContent={'space-between'}>\n      <BaseTouchable\n        onPress={_onEdit}\n        m=\"s\"\n        width={widthStandard}\n        flexDirection=\"row-reverse\"\n        p=\"m\"\n        borderRadius=\"s\"\n        backgroundColor=\"white\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        style={styles.shadow}>\n        <Text variant=\"subheadMedium\" mx=\"s\">\n          Edit Sizes\n        </Text>\n      </BaseTouchable>\n\n      <BaseTouchable\n        onPress={_onSave}\n        width={widthStandard}\n        m=\"s\"\n        flexDirection=\"row-reverse\"\n        p=\"m\"\n        borderRadius=\"s\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        backgroundColor=\"primaryBlue\"\n        style={styles.shadow}>\n        <Text color=\"white\" variant=\"subheadMedium\" mx=\"s\">\n          Save\n        </Text>\n      </BaseTouchable>\n    </Box>\n  );\n};\n\nconst styles = StyleSheet.create({\n  shadow: {\n    shadowOffset: {width: 0, height: 0},\n    shadowOpacity: 0.5,\n    shadowRadius: 5,\n    shadowColor: 'lightGray',\n  },\n});\n\nexport default ActionsButtons;\n","import {FLASHINGS_DATA} from '@domain/entities/flashing';\nimport {Board, GuideStepperBoard, MenuEditor} from '@presentation/components';\nimport React from 'react';\n\ntype Props = {\n  onSave: (data: FLASHINGS_DATA) => void;\n};\n\nconst BoardContainer: React.FC<Props> = ({onSave}) => {\n  return (\n    <>\n      <GuideStepperBoard onFinish={() => null} />\n      <Board onSave={onSave} />\n      <MenuEditor onSave={onSave} />\n    </>\n  );\n};\n\nexport default BoardContainer;\n","import React from 'react';\n\nimport {boardReducer, INITIAL_STATE} from './reducer';\nimport {BoardContext} from './context';\n\nconst BoardProvider: React.FC<{children: React.ReactNode}> = ({children}) => {\n  const [state, dispatch] = React.useReducer(boardReducer, INITIAL_STATE);\n\n  return (\n    <BoardContext.Provider value={{state, dispatch}}>\n      {children}\n    </BoardContext.Provider>\n  );\n};\n\nexport default BoardProvider;\n","import {ACTIONS, BoardAction} from './actions';\nimport {BoardState} from './types';\n\nexport const INITIAL_STATE: BoardState = {\n  stepIndex: 0,\n  flashingDraft: undefined,\n  indexLineSelected: 0,\n};\n\nexport const boardReducer = (\n  state: BoardState,\n  action: BoardAction,\n): BoardState => {\n  switch (action.type) {\n    case ACTIONS.ADD_DRAFT_FLASHING:\n      return {\n        ...state,\n        flashingDraft: action.payload,\n      };\n\n    case ACTIONS.UPDATE_DRAFT_FLASHING:\n      if (!state.flashingDraft) return state;\n\n      return {\n        ...state,\n        flashingDraft: {\n          ...state.flashingDraft,\n          ...action.payload,\n        },\n      };\n\n    case ACTIONS.CHANGE_STEP:\n      return {\n        ...state,\n        stepIndex: action.payload,\n      };\n\n    case ACTIONS.CHANGE_INDEX_LINE_SELECTED:\n      return {\n        ...state,\n        indexLineSelected: action.payload,\n      };\n\n    case ACTIONS.CLEAR:\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n","import {ThemeProvider} from '@shopify/restyle';\nimport lightTheme from './light';\nimport darkTheme from './dark';\nimport React from 'react';\nimport {isDark} from '@shared/utils/colorScheme';\n\ntype Props = {\n  children: React.ReactElement;\n};\nconst ProviderTheme: React.FC<Props> = ({children}) => {\n  const theme = isDark() ? darkTheme : lightTheme;\n\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n\nexport default ProviderTheme;\n","import Color from 'color';\nimport themeCore from './theme';\nimport palette from './palette';\n\nconst lightTheme = {\n  ...themeCore,\n  dark: false,\n  colors: {\n    ...themeCore.colors,\n    // TODO: cleanup theme colors\n    backgroundPattern: palette.primary[700],\n    backgrounds: palette.base[25],\n    border: palette.base[50],\n    buttonBorder: palette.base[100],\n    buttonBorderDisabled: Color(palette.base[100]).alpha(0.7).rgb().string(),\n    cards: palette.base[0],\n    grey100: palette.base[100],\n    grey200: palette.base[200],\n    grey25: palette.base[25],\n    grey300: palette.base[300],\n    grey400: palette.base[400],\n    grey50: palette.base[50],\n    grey900: palette.base[900],\n    iconPrimary: palette.base[50],\n    modalBackground: palette.legacy.blackAlpha500,\n    primary: palette.primary[500],\n    secondary: palette.primary[900],\n    shadow: palette.legacy.martinique,\n    skeletonBackground: palette.base[100],\n    skeletonHighlight: palette.legacy.polar,\n    successMessage: palette.success[600],\n    textPrimary: palette.base[900],\n    textSecondary: palette.base[400],\n    transparent: palette.legacy.transparent,\n    // future figma colors\n    bodyDrop: palette.overlay.bodyDropLight,\n    divider: palette.base[50],\n    errorAlert: palette.error[500],\n    errorBackground: palette.error[200],\n    iconBackground: palette.base[50],\n    iconFill: palette.base[0],\n    input: palette.base[0],\n    inputBorder: palette.base[100],\n    inputBorderFocused: palette.base[400],\n    inputDisabled: palette.base[50],\n    navDrop: palette.overlay.navDropLight,\n    textPlaceholder: palette.base[400],\n    //\tincluded for compatibility\n    disabled: Color(palette.primary[500]).alpha(0.4).rgb().string(),\n  },\n};\n\nexport type LightTheme = typeof lightTheme;\n\nexport default lightTheme;\n","import {createTheme} from '@shopify/restyle';\nimport palette from './palette';\nimport {\n  buttonVariants,\n  cardVariants,\n  dividerVariants,\n  textVariants,\n} from './variants';\n\nconst theme = createTheme({\n  colors: {\n    base0: palette.base[0],\n    base25: palette.base[25],\n    base50: palette.base[50],\n    base100: palette.base[100],\n    base200: palette.base[200],\n    base300: palette.base[300],\n    base400: palette.base[400],\n    base500: palette.base[500],\n    base700: palette.base[700],\n    base800: palette.base[800],\n    base900: palette.base[900],\n    success100: palette.success[100],\n    success700: palette.success[700],\n    bodyDrop: palette.legacy.blackAlpha500,\n    navDrop: palette.legacy.blackAlpha250,\n    black: palette.base[900],\n    white: palette.base[0],\n    primaryBlue: palette.legacy.primaryBlue,\n    transparent: palette.base[0],\n    primary100: palette.primary[100],\n    primary900: palette.primary[900],\n    bodyOverlay: palette.overlay.bodyOverlay,\n    error500: palette.error[500],\n    grayIcon: palette.legacy.grayIcon,\n    textGray: palette.legacy.textGray,\n    lightGray2: palette.legacy.lightGray2,\n    lightGray: palette.legacy.lightGray,\n  },\n  spacing: {\n    //@ts-ignore allow unset props\n    unset: null as number,\n    '1px': 1,\n    xxs: 2,\n    xs: 4,\n    s: 8,\n    m: 16,\n    l: 24,\n    xl: 32,\n    '2xl': 48,\n    '3xl': 64,\n    '4xl': 96,\n    '5xl': 128,\n    '6xl': 256,\n  },\n  borderRadii: {\n    //@ts-ignore allow unset props\n    unset: null as number,\n    '1px': 1,\n    xxs: 2,\n    xs: 4,\n    s: 8,\n    m: 16,\n    l: 24,\n    xl: 32,\n    '2xl': 48,\n    '3xl': 64,\n    '4xl': 96,\n    '5xl': 128,\n    '6xl': 256,\n  },\n  breakpoints: {\n    phone: 0,\n    tablet: 768,\n  },\n  zIndices: {\n    none: 0,\n    dropdown: 10,\n    modal: 20,\n    toast: 30,\n  },\n  textVariants,\n  cardVariants,\n  dividerVariants,\n  buttonVariants,\n});\n\nexport type ThemeCore = typeof theme;\n\nexport default theme;\n","// colorTokens.ts\nconst palette = {\n  base: {\n    0: '#FFFFFF',\n    25: '#F8F8FF',\n    50: '#E6E6F5',\n    100: '#CACBDE',\n    200: '#9596B3',\n    300: '#7B7C97',\n    400: '#5F6076',\n    500: '#46475A',\n    700: '#252631',\n    800: '#1B1C24',\n    900: '#111217',\n  },\n\n  primary: {\n    100: '#BFCCFF',\n    300: '#7B8DDE',\n    400: '#5B73D7',\n    500: '#3356D7',\n    700: '#2A46B9',\n    900: '#1C2A9A',\n  },\n\n  success: {\n    100: '#D2E7CE',\n    600: '#57A551',\n    700: '#147911',\n  },\n\n  error: {\n    200: '#F0B0A1',\n    400: '#EE3F22',\n    500: '#CC1E00',\n  },\n\n  state: {\n    processing: '#F4CC92',\n    scheduled: '#A9DFE8',\n  },\n\n  overlay: {\n    bodyDropLight: 'rgba(0, 0, 0, 0.5)',\n    bodyDropDark: 'rgba(0, 0, 0, 0.5)',\n    bodyOverlay: 'rgba(17, 18, 23, 0.7)',\n    navDropLight: 'rgba(17, 18, 23, 0.15)',\n    navDropDark: 'rgba(0, 0, 0, 0.25)',\n  },\n\n  legacy: {\n    black: '#000',\n    blackAlpha500: 'rgba(0,0,0,0.5)',\n    blackAlpha250: 'rgba(0,0,0,0.25)',\n    charlotte: '#A9DFE8',\n    lavender: '#F0B0A1',\n    martinique: '#2F3350',\n    orange: '#EB6E26',\n    peach: '#FC725B',\n    peachOrange: '#F4CC92',\n    polar: '#F2F8FC',\n    transparent: 'rgba(255,255,255,0)',\n    white: '#fff',\n    textGray: '#8F94AE',\n    primaryBlue: '#0E3A90',\n    lightGray: '#8F94AE',\n    lightGray2: '#D9D9D9',\n    lightBlue: '#0E3A901A',\n    grayIcon: '#828489',\n    pointer: '#8F94AE',\n    borderPointer: '#000000',\n  },\n} as const;\n\nexport default palette;\n","export const cardVariants = {\n  defaults: {\n    padding: 'm',\n    marginBottom: 'm',\n    marginHorizontal: 'm',\n    backgroundColor: 'white',\n    borderRadius: 's',\n    shadowOffset: {width: 2, height: 0},\n    shadowOpacity: 0.5,\n    shadowRadius: 4,\n    elevation: 3,\n    shadowColor: 'lightGray',\n  },\n  guide: {\n    width: 200,\n    padding: 's',\n    backgroundColor: 'white',\n    marginBottom: 'unset',\n    marginHorizontal: 'unset',\n    borderRadius: 'unset',\n    shadowOffset: {width: 0, height: 0},\n    shadowOpacity: 0.5,\n    shadowRadius: 4,\n    borderWidth: 0.2,\n    borderColor: 'black',\n  },\n};\n","export const textVariants = {\n  defaults: {\n    color: 'textPrimary',\n    letterSpacing: 0.049,\n    fontSize: 14,\n  },\n  bodyRegular: {\n    fontSize: {\n      phone: 14,\n      tablet: 17,\n    },\n    fontWeight: 'normal',\n    lineHeight: 18,\n  },\n  menuEditor: {\n    color: 'textGray',\n    letterSpacing: 0.049,\n    fontSize: {\n      phone: 12,\n      tablet: 16,\n    },\n  },\n  bodyBold: {\n    fontWeight: '600',\n    fontSize: {\n      phone: 14,\n      tablet: 17,\n    },\n    lineHeight: 18,\n  },\n  subheadSecondary: {\n    fontWeight: '600',\n    fontSize: 14,\n    lineHeight: 16,\n  },\n  subheadMedium: {\n    fontWeight: '500',\n    fontSize: 16,\n    lineHeight: 20,\n  },\n};\n","export const dividerVariants = {\n  defaults: {\n    height: 1,\n    backgroundColor: 'divider',\n  },\n};\n","export const buttonVariants = {\n  defaults: {\n    borderRadius: 's',\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    textAlign: 'center',\n    px: 'm',\n    py: {tablet: 'm', phone: 's'},\n    minHeight: 50,\n    fontWeight: '600',\n    fontSize: {tablet: 22, phone: 17},\n    letterSpacing: 0.049, // 0.049 => 0.0035em (fontSize 14)\n  },\n\n  smallMenu: {\n    minHeight: 30,\n    fontSize: 12,\n    color: 'black',\n    borderWidth: 1,\n    borderColor: 'black',\n  },\n  smallMenuActive: {\n    backgroundColor: 'primaryBlue',\n    minHeight: 30,\n    fontSize: 12,\n    borderWidth: 1,\n    borderColor: 'white',\n    color: 'white',\n  },\n\n  endType: {\n    width: 100,\n    backgroundColor: 'input',\n    borderWidth: 1,\n    borderColor: 'buttonBorder',\n    height: 50,\n    marginHorizontal: 'xs',\n    marginTop: 's',\n    fontSize: 20,\n  },\n};\n","import palette from './palette';\nimport Color from 'color';\nimport themeCore from './theme';\n\nconst darkTheme = {\n  ...themeCore,\n  dark: true,\n  colors: {\n    ...themeCore.colors,\n    // TODO: cleanup theme colors\n    backgroundPattern: palette.primary[700],\n    backgrounds: palette.base[900],\n    border: palette.base[50],\n    buttonBorder: palette.base[100],\n    buttonBorderDisabled: Color(palette.base[100]).alpha(0.7).rgb().string(),\n    cards: palette.base[0],\n    grey100: palette.base[100],\n    grey200: palette.base[200],\n    grey25: palette.base[25],\n    grey300: palette.base[300],\n    grey400: palette.base[400],\n    grey50: palette.base[50],\n    grey900: palette.base[900],\n    iconPrimary: palette.base[50],\n    modalBackground: palette.legacy.blackAlpha500,\n    primary: palette.primary[500],\n    secondary: palette.primary[900],\n    shadow: palette.legacy.martinique,\n    skeletonBackground: palette.base[100],\n    skeletonHighlight: palette.legacy.polar,\n    successMessage: palette.success[600],\n    textPrimary: palette.base[0],\n    textSecondary: palette.base[400],\n    transparent: palette.legacy.transparent,\n    // future figma colors\n    bodyDrop: palette.overlay.bodyDropLight,\n    divider: palette.base[50],\n    errorAlert: palette.error[500],\n    errorBackground: palette.error[200],\n    iconBackground: palette.base[50],\n    iconFill: palette.base[0],\n    input: palette.base[0],\n    inputBorder: palette.base[100],\n    inputBorderFocused: palette.base[400],\n    inputDisabled: palette.base[50],\n    navDrop: palette.overlay.navDropLight,\n    textPlaceholder: palette.base[400],\n    //\tincluded for compatibility\n    disabled: Color(palette.primary[500]).alpha(0.4).rgb().string(),\n  },\n};\n\nexport type DarkTheme = typeof darkTheme;\nexport default darkTheme;\n","import {Appearance} from 'react-native';\n\nexport const isDark = () => {\n  const colorScheme = Appearance.getColorScheme();\n  return colorScheme === 'dark';\n};\n"],"mappings":"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","names":["index_exports","__export","Board_default","__toCommonJS","import_react","import_react","import_react","import_react_native","import_restyle","import_restyle","useAppRestyle","restyleFunctions","props","import_react","import_react_native","width","height","configBoard","import_d3_scale","scaleColumns","domainData","sizeScreen","paddingInner","configBoard","paddingOuter","align","ScaleXBar","dataScale","ScaleYBar","findCoordsNearest","pointCoord","arrayGrid","configBoard","_","i","scaleXBar","ScaleXBar","scaleYBar","ScaleYBar","filterXCoords","point","filterYCoords","findClosestNumber","dataNumber","valueNumber","closest","minDifference","difference","shape","import_react_native_redash","buildPathLine","points","curseLine","generatorLine","data","forwardRef","component","React","useAsProp","component","as","useAsProp_default","restyleFunctions","Box","forwardRef","as","rest","ref","BoxComponent","useAsProp_default","props","useAppRestyle","React","Box_default","import_react","import_react_native","import_restyle","CustomFonts","FONT_WEIGHT_MAPPING","getCustomFontFamily","fontWeight","fontFamily","CustomFonts","FONT_WEIGHT_MAPPING","useFontStyle","fontFamily","fontWeight","customFontFamily","getCustomFontFamily","useFontStyle_default","restyleFunctions","Text","forwardRef","as","style","onPress","isDisabled","onPressIn","onPressOut","isBlurred","_light","rest","ref","TextComponent","useAsProp_default","RNText","isHighlighted","setHighlighted","React","textStyle","props","useAppRestyle","fontStyle","useFontStyle_default","highlightedStyle","handlePressIn","ev","handlePressOut","Text_default","React","import_react_native","import_restyle","import_react_native","AnimatedPressable","AnimatedPressable_default","restyleFunctions","BaseTouchable","forwardRef","children","radius","isDisabled","rippleColor","borderless","activeOpacity","foreground","as","_dark","_light","rest","ref","TouchableComponent","useAsProp_default","AnimatedPressable_default","props","useAppRestyle","childOpacity","anim","isMounted","_setOpacityTo","toValue","duration","_opacityActive","_opacityInactive","onPressIn","event","onPressOut","BaseTouchable_default","React","import_react_native","import_restyle","variant","restyleFunctions","Card","forwardRef","as","rest","ref","CardComponent","useAsProp_default","passedProps","useAppRestyle","Card_default","import_restyle","variant","Divider","Box_default","Divider_default","import_react","import_react_native","import_restyle","import_react","import_react_native","SIZES","BaseSpinner","size","props","React","BaseSpinner_default","import_react","import_react_native","import_color","BaseButton","forwardRef","disabled","children","enableHighlight","activeOpacity","underlayColor","as","foreground","borderless","rest","ref","PressableComponent","useAsProp_default","anim","React","isMounted","_setOpacityTo","toValue","duration","_opacityInactive","onPressIn","event","onPressOut","color","BaseButton_default","getKeys","object","variant","restyleFunctions","spacingStyleProperties","property","textStyleProperties","Button","forwardRef","children","spinner","isLoading","isDisabled","isFullWidth","buttonVariant","alignSelf","_disabled","style","rest","ref","disabledStyle","props","useAppRestyle","fontStyle","useFontStyle_default","containerStyle","nextContainerStyle","textStyle","spacingStyle","getKeys","styleAcc","styleProperty","isValidStyle","React","styles","BaseButton_default","BaseSpinner_default","Button_default","import_react","import_react","import_restyle","import_react_native_svg","restyleFunctions","SvgBox","forwardRef","style","width","height","as","size","rest","ref","SvgComponent","useAsProp_default","fill","stroke","currentColor","svgStyle","props","useAppRestyle","React","SvgBox_default","Icon","forwardRef","props","ref","React","SvgBox_default","Icon_default","import_react_native_redash","STEPS_BOARD","BoardEntity","value","toExponential","point1","point2","pointSecond","deltaX","deltaY","sumDeltas","result","lines","point","lastPoint","newPoint","flashingDataDraft","dataLine","indexLineSelected","newValue","newValuesDataLines","index","lastLine","points","line","getIndexOfStepForName","nameStep","STEPS_BOARD","stepName","guideSteps","getIndexOfStepForName","import_react_native","AddPointToBoard","repo","newPoint","draftFlashing","dataFlashing","BoardEntity","lineComplete","lastPoint","dataLine","dataLines","GetStepBoard","repo","ChangeStepBoard","repo","newStep","draftFlashing","GetDataDraftFlashing","repo","UndoPointBoard","repo","draftFlashing","updateDataUndo","BoardEntity","ClearBoard","repo","EditMeasurements","repo","newSizeInput","goNext","draft","currentIndex","updatedDraft","BoardEntity","maxIndex","currentStep","nextIndex","GetLineSelected","repo","createBoardUC","repo","AddPointToBoard","GetStepBoard","ChangeStepBoard","GetDataDraftFlashing","UndoPointBoard","ClearBoard","EditMeasurements","GetLineSelected","import_react","BoardContext","import_react","useBoardContext","context","BoardContext","getDraftFlashing","state","getStepOfBoard","getIndexLineSelected","getSelectedLine","useBoardRepository","dispatch","state","useBoardContext","data","getDraftFlashing","stepIndex","newIndexLine","getStepOfBoard","getIndexLineSelected","getSelectedLine","useBoard","repo","useBoardRepository","boardUC","createBoardUC","flashingDataDraft","stepBoard","lineSelected","point","newStep","newSizeLine","goNext","GuideStepperBoard","dataStep","setDataStep","React","stepBoard","useBoard","newDataStep","guideSteps","itemStep","Box_default","styles","Card_default","Text_default","GuideStepperBoard_default","import_react","import_react_native","import_react","IconMenuEditor","nameIcon","title","onPress","disabled","rest","React","Box_default","BaseTouchable_default","Icon_default","Text_default","IconMenuEditor_default","import_back","import_undo","import_clear","import_next","import_complete","MenuEditor","onSave","stepBoard","changeStep","undoPoint","clearBoard","flashingDataDraft","useBoard","_isEmptyBoard","React","_disabledUndo","getIndexOfStepForName","_isFinishStep","_onBack","newStep","_onNext","Box_default","styles","IconMenuEditor_default","MenuEditor_default","import_react","useScrollView","scrollRef","newCoordenateY","import_react","import_react_native","import_restyle","restyleFunctions","ScrollBox","forwardRef","as","_light","rest","ref","ScrollBoxComponent","useAsProp_default","props","useAppRestyle","React","ScrollBox_default","import_react","import_react","import_react_native","import_react_native_gesture_handler","import_react","import_react","import_react_native_svg","GridComponent","_renderLinesVerticals","domainData","heightLine","scaleXBar","dataLine","React","configBoard","_renderLinesHorizontals","widthLine","scaleYBar","arrayGrid","_","i","ScaleXBar","ScaleYBar","Grid_default","import_react_native_svg","import_react","import_react_native_svg","Line","line","id","React","PathComponent","buildPathLine","Line_default","import_react","import_react_native_svg","Pointer","props","React","Pointer_default","import_react","import_react","import_react_native_svg","TextSvg","fontSize","colorLabel","rectFill","positionTextX","positionTextY","textValue","id","padding","pending","textWidth","setTextWidth","React","textHeight","event","TextSvg_default","import_react_native_redash","setUpPendingForTheLabel","pendingPoint","calculatePointHalf","points","x1","x2","y1","y2","xPoint","yPoint","gettingCoordinatesForLabel","coordinates","pending","valueLabel","isRightBlueLine","positionTextX","positionTextY","TextLineMM","coordinates","index","flashingDataDraft","useBoard","_getPending","React","pend","setUpPendingForTheLabel","label","positionRect","positionText","newPoints","calculatePointHalf","gettingCoordinatesForLabel","TextSvg_default","TextLineMM_default","SvgBoard","width","configBoard","height","flashingDataDraft","useBoard","_linesComponent","React","lines","line","index","arrayLines","Line_default","Svg","Grid_default","points","LineComponent","isLine","Pointer_default","TextLineMM_default","SvgBoard_default","BoardManager","stepBoard","addPoint","useBoard","isDrawing","React","getIndexOfStepForName","event","newPosition","findCoordsNearest","SvgBoard_default","BoardManager_default","import_react","import_react_native","SIZE_ICON","EditMeasurement","editMeasurement","lineSelected","useBoard","measurement","setMeasurement","React","inputRef","_handlePrevious","_handleNext","_onChangeValue","newText","Box_default","BaseTouchable_default","Icon_default","Text_default","configBoard","Divider_default","EditMeasurements_default","import_react","import_react_native","useKeyboardVisibility","onKeyboardDidShow","onKeyboardDidHide","isKeyboardVisible","setKeyboardVisible","susbcriptionKeyboardDidShow","ev","heightKeyBoardDefault","height","susbcriptionKeyboardDidHide","import_react","UpdateMeasurements","setScrollEnabled","scrollToY","stepBoard","useBoard","heightMeasurement","setHeightMeasurement","React","useKeyboardVisibility","heightKeyboard","getIndexOfStepForName","Box_default","EditMeasurements_default","UpdateMeasurements_default","import_react","import_react_native","widthStandard","ActionsButtons","onSave","stepBoard","changeStep","flashingDataDraft","useBoard","_visible","React","getIndexOfStepForName","_onEdit","editMeasurementIndex","_onSave","Box_default","BaseTouchable_default","styles","Text_default","ActionsButtons_default","Board","onSave","scrollRef","scrollToY","useScrollView","scrollEnabled","setScrollEnabled","React","ScrollBox_default","BoardManager_default","UpdateMeasurements_default","ActionsButtons_default","Board_default","import_react","BoardContainer","onSave","React","GuideStepperBoard_default","Board_default","MenuEditor_default","Board_container_default","import_react","INITIAL_STATE","boardReducer","state","action","BoardProvider","children","state","dispatch","React","boardReducer","INITIAL_STATE","BoardContext","Provider_default","import_restyle","import_color","import_restyle","palette","palette_default","cardVariants","textVariants","dividerVariants","buttonVariants","theme","palette_default","textVariants","cardVariants","dividerVariants","buttonVariants","theme_default","lightTheme","theme_default","palette_default","Color","light_default","import_color","darkTheme","theme_default","palette_default","Color","dark_default","import_react","import_react_native","isDark","ProviderTheme","children","theme","isDark","dark_default","light_default","React","Provider_default","BoardMain","onSave","React","Provider_default","Board_container_default","Board_default"]}